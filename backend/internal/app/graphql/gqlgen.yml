# .gqlgen.yml example
#
# Refer to https://gqlgen.com/config/
# for detailed .gqlgen.yml documentation.

schema:
- schema/*.graphql
exec:
  filename: gen/generated.go
model:
  filename: gen/models_gen.go
resolver:
  layout: follow-schema
  #filename: resolver/resolver.go
  #type: Resolver
  dir: resolver
  package: resolver
models:
  Task:
    model: github.com/robinshi007/cx-tasks/internal/domain/model.Task
  NewTask:
    model: github.com/robinshi007/cx-tasks/internal/domain/usecase/in.NewTask
  EditTask:
    model: github.com/robinshi007/cx-tasks/internal/domain/usecase/in.EditTask
  FetchTask:
    model: github.com/robinshi007/cx-tasks/internal/domain/usecase/in.FetchTask
# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
